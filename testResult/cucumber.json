[
  {
    "line": 1,
    "elements": [
      {
        "line": 23,
        "name": "Successful completion of a Tablet Journey",
        "description": "",
        "id": "reg-afa-tablet;successful-completion-of-a-tablet-journey;;2",
        "after": [
          {
            "result": {
              "duration": 115022161,
              "error_message": "java.lang.NullPointerException\r\n\tat steps.Hooks.embedScreenshot(Hooks.java:94)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberScenarioOutline.run(CucumberScenarioOutline.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat cucumber.api.testng.AbstractTestNGCucumberTests.feature(AbstractTestNGCucumberTests.java:21)\r\n\tat com.github.mkolisnyk.cucumber.runner.ExtendedTestNGRunner.feature(ExtendedTestNGRunner.java:69)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:645)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:756)\r\n\tat org.testng.TestRunner.run(TestRunner.java:610)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:387)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:289)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1218)\r\n\tat org.testng.TestNG.runSuites(TestNG.java:1133)\r\n\tat org.testng.TestNG.run(TestNG.java:1104)\r\n\tat org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)\r\n\tat org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "Hooks.embedScreenshot(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 284531988,
              "error_message": "java.lang.AssertionError: Unable to Login/validate home page, please see the failure screenshot\r\n\tat org.testng.Assert.fail(Assert.java:94)\r\n\tat steps.E2EOrderPlaced_Steps.LoginAgentShop(E2EOrderPlaced_Steps.java:1779)\r\n\tat âœ½.Given I login to Agent shop(Reg_AFA_Tablet.feature:6)\r\n",
              "status": "failed"
            },
            "line": 6,
            "name": "I login to Agent shop",
            "match": {
              "location": "E2EOrderPlaced_Steps.LoginAgentShop()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 7,
            "name": "performs Acquisition for New user",
            "match": {
              "location": "E2EOrderPlaced_Steps.performs_Acquisition_for_New_user()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "Select a valid PayM tablet",
            "match": {
              "arguments": [
                {
                  "val": "tablet",
                  "offset": 20
                }
              ],
              "location": "E2EOrderPlaced_Steps.SelectValid_Device(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "Select valid Random from tariffs tab",
            "match": {
              "arguments": [
                {
                  "val": "Random",
                  "offset": 13
                }
              ],
              "location": "E2EOrderPlaced_Steps.SelectTariff(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "select a valid Handset and Tariff combination",
            "match": {
              "location": "E2EOrderPlaced_Steps.select_a_valid_Handset_and_Tariff_combination()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "Validate all the Basket content and checkout",
            "match": {
              "location": "E2EOrderPlaced_Steps.validate_all_the_Basket_content_and_checkout()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 12,
            "name": "perform all the advisory checks",
            "match": {
              "location": "E2EOrderPlaced_Steps.advisory_checks()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 13,
            "name": "perform the credit checks using valid TEST, ACCEPTA, 18, SL11UP and valid TEST ACCEPTA",
            "match": {
              "arguments": [
                {
                  "val": "TEST",
                  "offset": 38
                },
                {
                  "val": "ACCEPTA",
                  "offset": 44
                },
                {
                  "val": "18",
                  "offset": 53
                },
                {
                  "val": "SL11UP",
                  "offset": 57
                },
                {
                  "val": "TEST ACCEPTA",
                  "offset": 74
                }
              ],
              "location": "E2EOrderPlaced_Steps.CreditCheck(String,String,String,String,String)"
            },
            "matchedColumns": [
              3,
              4,
              5,
              6,
              7
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 14,
            "name": "Register the customer with valid TEST, ACCEPTA, 18, SL11UP and other valid details in delivery page",
            "match": {
              "arguments": [
                {
                  "val": "TEST",
                  "offset": 33
                },
                {
                  "val": "ACCEPTA",
                  "offset": 39
                },
                {
                  "val": "18",
                  "offset": 48
                },
                {
                  "val": "SL11UP",
                  "offset": 52
                }
              ],
              "location": "E2EOrderPlaced_Steps.register_the_customer(String,String,String,String)"
            },
            "matchedColumns": [
              3,
              4,
              6,
              7
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 15,
            "name": "Choose HomeDelivery delivery address and delivery time",
            "match": {
              "location": "E2EOrderPlaced_Steps.HomeDelivery_Address()"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 16,
                "value": "# And Update Device Plan Link Email Address"
              },
              {
                "line": 17,
                "value": "#  Then CCALink Should be generated"
              }
            ],
            "line": 18,
            "name": "Pay by card for PAYM device",
            "match": {
              "location": "E2EOrderPlaced_Steps.pay_by_card_payn_device()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 19,
            "name": "Order confirmation message should be displayed",
            "match": {
              "location": "E2EOrderPlaced_Steps.order_confirmation_message_should_be_displayed()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 4,
            "name": "@FailedOne"
          }
        ]
      }
    ],
    "name": "Reg_AFA_Tablet",
    "description": "",
    "id": "reg-afa-tablet",
    "keyword": "Feature",
    "uri": "Reg_AFA_Tablet.feature"
  }
]